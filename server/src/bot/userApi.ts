import { TelegramClient } from 'telegram';
import { StringSession } from 'telegram/sessions/index.js';
import { Api } from 'telegram/tl/index.js';
import input from 'input'; // npm install input

// ‚ö†Ô∏è –ü–æ–ª—É—á–∏ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ https://my.telegram.org
const apiId = 123456;
const apiHash = 'your_api_hash';

// –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º ‚Äî –¥–ª—è –ø–µ—Ä–≤–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫–æ–¥–∞
const stringSession = new StringSession('');

(async () => {
  console.log('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
  const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
  });

  await client.start({
    phoneNumber: async () => await input.text('–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: '),
    password: async () => await input.text('–í–≤–µ–¥–∏ 2FA –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω): '),
    phoneCode: async () => await input.text('–í–≤–µ–¥–∏ –∫–æ–¥ –∏–∑ Telegram: '),
    onError: (err) => console.log(err),
  });

  console.log('String session:', client.session.save()); // —Å–æ—Ö—Ä–∞–Ω–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–≤—Ç–æ—Ä–Ω–æ

  // üëá —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å username –∏–ª–∏ id –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
  const channel = await client.getEntity('https://t.me/c/XXXXXXXXX');

  const allMembers = [];
  let offset = 0;

  while (true) {
    const result = await client.invoke(
      new Api.channels.GetParticipants({
        channel,
        filter: new Api.ChannelParticipantsRecent(),
        offset,
        limit: 100, // –º–∞–∫—Å–∏–º—É–º –∑–∞ –æ–¥–∏–Ω –≤—ã–∑–æ–≤
        hash: 0,
      }),
    );

    if (!result.users.length) break;

    for (const user of result.users) {
      allMembers.push({
        telegramId: user.id.valueOf(),
        name: `${user.firstName || ''} ${user.lastName || ''}`.trim(),
      });
    }

    offset += result.users.length;
  }

  console.log('–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', allMembers.length);
  console.log(allMembers);
})();
